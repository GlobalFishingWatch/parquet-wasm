[package]
name = "read-parquet-browser"
version = "0.1.0"
authors = ["Andy Redhead <andy@far2gone.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
# (2021/07/31, AR - dont think thats true any more, looks ok on stable Rust 1.33+ )
#wee_alloc = { version = "0.4.5", optional = true }


# AR - project dependencies

js-sys = "0.3.53"
getrandom = { version = "0.2.3", features = ["js"] }
arrow = { version = "9.1.0", default-features = false }
parquet = { version = "9.1.0", default_features=false, features = ["snap", "arrow", "base64", "experimental"] }


[dependencies.web-sys]
version = "0.3"
features = [
    "console",
]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
